************************** mnist_4x4_split_11 **************************

Trial 1
  Parsing Error: No terminal matches 'x' in the current parser context, at line 1 col 77

, x2) implies (P_same_value(x1, x2) iff x1 = x2))
                                        ^
Expected one of: 
	* BANG
	* LPAR
	* __ANON_3

Trial 2
  Parsed Rule: forall[x1](forall[x2](((P_same_row(x1, x2) | P_same_col(x1, x2) | P_same_block(x1, x2)) & !(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.1989, Accuracy: 95.0000%, AUC: 0.9924


************************** emnist_4x4_split_11 **************************

Trial 1
  Parsing Error: No terminal matches 'x' in the current parser context, at line 1 col 43

rall x1 forall x2 (P_same_row(x1, x2) & x1 != x2 -> !P_same_value(x1, x2)) & (fo
                                        ^
Expected one of: 
	* BANG
	* LPAR
	* __ANON_3

Trial 2
  Extraction Error: 'NoneType' object has no attribute 'group'
Trial 3
  Extraction Error: 'NoneType' object has no attribute 'group'
Trial 4
  Parsing Error: No terminal matches '.' in the current parser context, at line 1 col 10

forall x1. forall x2. forall x3. forall x4. (P_sa
         ^
Expected one of: 
	* LPAR
	* BANG
	* EXISTS
	* FORALL
	* COMMA
	* __ANON_3

Trial 5
  Extraction Error: 'NoneType' object has no attribute 'group'
Trial 6
  Parsed Rule: forall[x1](forall[x2](forall[x3](forall[x4]((!(P_same_loc(x1, x2)) | !(P_same_value(x1, x2))) & (!(P_same_loc(x1, x3)) | !(P_same_value(x1, x3))) & (!(P_same_loc(x1, x4)) | !(P_same_value(x1, x4))) & (!(P_same_loc(x2, x3)) | !(P_same_value(x2, x3))) & (!(P_same_loc(x2, x4)) | !(P_same_value(x2, x4))) & (!(P_same_loc(x3, x4)) | !(P_same_value(x3, x4)))))))
  Grounding Error: 'x3'
Trial 7
  Parsed Rule: forall[x1](forall[x2](((P_same_row(x1, x2) | P_same_col(x1, x2)) & !(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.4813, Accuracy: 79.0000%, AUC: 0.8987
Trial 8
  Parsed Rule: forall[x1](forall[x2](((P_same_row(x1, x2) | P_same_col(x1, x2)) & !(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.4813, Accuracy: 79.0000%, AUC: 0.8987
Trial 9
  Parsed Rule: forall[x1](forall[x2](((P_same_row(x1, x2) | P_same_col(x1, x2)) & !(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.4813, Accuracy: 79.0000%, AUC: 0.8987
Trial 10
  Parsed Rule: forall[x1](forall[x2](((P_same_row(x1, x2) | P_same_col(x1, x2)) & !(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.4813, Accuracy: 79.0000%, AUC: 0.8987


************************** kmnist_4x4_split_11 **************************

Trial 1
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.7405, Accuracy: 49.5000%, AUC: 0.4983
Trial 2
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.7405, Accuracy: 49.5000%, AUC: 0.4983
Trial 3
  Parsed Rule: forall[x1](forall[x2]((P_same_loc(x1, x2) | !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.7405, Accuracy: 49.5000%, AUC: 0.4983
Trial 4
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.7405, Accuracy: 49.5000%, AUC: 0.4983
Trial 5
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.7405, Accuracy: 49.5000%, AUC: 0.4983
Trial 6
  Parsed Rule: exists[x1](exists[x2]((!(P_same_loc(x1, x2)) & P_same_value(x1, x2))))
  Training:
  Test -> Loss: 0.7391, Accuracy: 50.5000%, AUC: 0.5017
Trial 7
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.7405, Accuracy: 49.5000%, AUC: 0.4983
Trial 8
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 0.7405, Accuracy: 49.5000%, AUC: 0.4983
Trial 9
  Parsed Rule: forall[x1, x2](((P_same_row(x1, x2) | P_same_col(x1, x2) | P_same_block(x1, x2)) & !(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2))))
  Training:
  Test -> Loss: 0.3447, Accuracy: 87.0000%, AUC: 0.9445


************************** fmnist_4x4_split_11 **************************

Trial 1
  Parsed Rule: forall[x1](forall[x2]((P_same_row(x1, x2) implies P_same_value(x1, x2))))
  Training:
  Test -> Loss: 0.7467, Accuracy: 50.5000%, AUC: 0.4937
Trial 2
  Parsed Rule: forall[x1](forall[x2]((P_same_col(x1, x2) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 50.0000, Accuracy: 50.0000%, AUC: 0.5000
Trial 3
  Parsed Rule: forall[x1](forall[x2]((P_same_row(x1, x2) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 50.0000, Accuracy: 50.0000%, AUC: 0.5000
Trial 4
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 1.6521, Accuracy: 50.0000%, AUC: 0.5014
Trial 5
  Parsed Rule: forall[x1](forall[x2]((P_same_block(x1, x2) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 50.0000, Accuracy: 50.0000%, AUC: 0.5000
Trial 6
  Parsed Rule: forall[x1](forall[x2](((P_same_row(x1, x2) | P_same_col(x1, x2) | P_same_block(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 50.0000, Accuracy: 50.0000%, AUC: 0.5000
Trial 7
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 1.6521, Accuracy: 50.0000%, AUC: 0.5014
Trial 8
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 1.6521, Accuracy: 50.0000%, AUC: 0.5014
Trial 9
  Parsed Rule: forall[x1](forall[x2](((P_same_row(x1, x2) | P_same_col(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 50.0000, Accuracy: 50.0000%, AUC: 0.5000
Trial 10
  Parsed Rule: forall[x1](forall[x2]((!(P_same_loc(x1, x2)) implies !(P_same_value(x1, x2)))))
  Training:
  Test -> Loss: 1.6521, Accuracy: 50.0000%, AUC: 0.5014